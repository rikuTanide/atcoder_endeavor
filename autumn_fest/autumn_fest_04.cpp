#include <bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp>
//namespace mp = boost::multiprecision;
//#include "atcoder/all"

using namespace std;

const double PI = 3.14159265358979323846;
typedef long long ll;
const double EPS = 1e-9;
#define rep(i, n) for (int i = 0; i < (n); ++i)
typedef pair<ll, ll> P;
const ll INF = 10e17;
#define cmin(x, y) x = min(x, y)
#define cmax(x, y) x = max(x, y)
#define ret() return 0;

double equal(double a, double b) {
    return fabs(a - b) < DBL_EPSILON;
}

template<class T>
std::istream &operator>>(std::istream &in, set<T> &o) {
    T a;
    in >> a;
    o.insert(a);
    return in;
}

template<class T>
std::istream &operator>>(std::istream &in, queue<T> &o) {
    ll a;
    in >> a;
    o.push(a);
    return in;
}

template<class T>
bool contain(set<T> &s, T a) { return s.find(a) != s.end(); }

typedef priority_queue<ll, vector<ll>, greater<ll> > PQ_ASK;
int mod = 1000000007;

struct mint {
    ll x; // typedef long long ll;
    mint(ll x = 0) : x((x % mod + mod) % mod) {}

    mint &operator+=(const mint a) {
        if ((x += a.x) >= mod) x -= mod;
        return *this;
    }

    mint &operator-=(const mint a) {
        if ((x += mod - a.x) >= mod) x -= mod;
        return *this;
    }

    mint &operator*=(const mint a) {
        (x *= a.x) %= mod;
        return *this;
    }

    mint operator+(const mint a) const {
        mint res(*this);
        return res += a;
    }

    mint operator-(const mint a) const {
        mint res(*this);
        return res -= a;
    }

    mint operator*(const mint a) const {
        mint res(*this);
        return res *= a;
    }

    mint pow(ll t) const {
        if (!t) return 1;
        mint a = pow(t >> 1);
        a *= a;
        if (t & 1) a *= *this;
        return a;
    }

    // for prime mod
    mint inv() const {
        return pow(mod - 2);
    }

    mint &operator/=(const mint a) {
        return (*this) *= a.inv();
    }

    mint operator/(const mint a) const {
        mint res(*this);
        return res /= a;
    }

    friend std::istream &operator>>(std::istream &in, mint &o) {
        ll a;
        in >> a;
        o = a;
        return in;
    }

    friend std::ostream &operator<<(std::ostream &out, const mint &o) {
        out << o.x;
        return out;
    }

};

vector<ll> get_start_1999(ll n) {
    vector<vector<ll>> v = {
            {0,          0,    1},
            {10000000,   1917, 1527},
            {20000000,   1039, 625},
            {30000000,   973,  94},
            {40000000,   1748, 659},
            {50000000,   1678, 1627},
            {60000000,   1619, 33},
            {70000000,   1482, 175},
            {80000000,   893,  1533},
            {90000000,   1816, 216},
            {100000000,  1917, 1527},
            {110000000,  1039, 625},
            {120000000,  973,  94},
            {130000000,  1748, 659},
            {140000000,  1678, 1627},
            {150000000,  1619, 33},
            {160000000,  1482, 175},
            {170000000,  893,  1533},
            {180000000,  1816, 216},
            {190000000,  1917, 1527},
            {200000000,  1039, 625},
            {210000000,  973,  94},
            {220000000,  1748, 659},
            {230000000,  1678, 1627},
            {240000000,  1619, 33},
            {250000000,  1482, 175},
            {260000000,  893,  1533},
            {270000000,  1816, 216},
            {280000000,  1917, 1527},
            {290000000,  1039, 625},
            {300000000,  973,  94},
            {310000000,  1748, 659},
            {320000000,  1678, 1627},
            {330000000,  1619, 33},
            {340000000,  1482, 175},
            {350000000,  893,  1533},
            {360000000,  1816, 216},
            {370000000,  1917, 1527},
            {380000000,  1039, 625},
            {390000000,  973,  94},
            {400000000,  1748, 659},
            {410000000,  1678, 1627},
            {420000000,  1619, 33},
            {430000000,  1482, 175},
            {440000000,  893,  1533},
            {450000000,  1816, 216},
            {460000000,  1917, 1527},
            {470000000,  1039, 625},
            {480000000,  973,  94},
            {490000000,  1748, 659},
            {500000000,  1678, 1627},
            {510000000,  1619, 33},
            {520000000,  1482, 175},
            {530000000,  893,  1533},
            {540000000,  1816, 216},
            {550000000,  1917, 1527},
            {560000000,  1039, 625},
            {570000000,  973,  94},
            {580000000,  1748, 659},
            {590000000,  1678, 1627},
            {600000000,  1619, 33},
            {610000000,  1482, 175},
            {620000000,  893,  1533},
            {630000000,  1816, 216},
            {640000000,  1917, 1527},
            {650000000,  1039, 625},
            {660000000,  973,  94},
            {670000000,  1748, 659},
            {680000000,  1678, 1627},
            {690000000,  1619, 33},
            {700000000,  1482, 175},
            {710000000,  893,  1533},
            {720000000,  1816, 216},
            {730000000,  1917, 1527},
            {740000000,  1039, 625},
            {750000000,  973,  94},
            {760000000,  1748, 659},
            {770000000,  1678, 1627},
            {780000000,  1619, 33},
            {790000000,  1482, 175},
            {800000000,  893,  1533},
            {810000000,  1816, 216},
            {820000000,  1917, 1527},
            {830000000,  1039, 625},
            {840000000,  973,  94},
            {850000000,  1748, 659},
            {860000000,  1678, 1627},
            {870000000,  1619, 33},
            {880000000,  1482, 175},
            {890000000,  893,  1533},
            {900000000,  1816, 216},
            {910000000,  1917, 1527},
            {920000000,  1039, 625},
            {930000000,  973,  94},
            {940000000,  1748, 659},
            {950000000,  1678, 1627},
            {960000000,  1619, 33},
            {970000000,  1482, 175},
            {980000000,  893,  1533},
            {990000000,  1816, 216},
            {1000000000, 1917, 1527},
            {1010000000, 1039, 625},
            {1020000000, 973,  94},
            {1030000000, 1748, 659},
            {1040000000, 1678, 1627},
            {1050000000, 1619, 33},
            {1060000000, 1482, 175},
            {1070000000, 893,  1533},
            {1080000000, 1816, 216},
            {1090000000, 1917, 1527},
            {1100000000, 1039, 625},
            {1110000000, 973,  94},
            {1120000000, 1748, 659},
            {1130000000, 1678, 1627},
            {1140000000, 1619, 33},
            {1150000000, 1482, 175},
            {1160000000, 893,  1533},
            {1170000000, 1816, 216},
            {1180000000, 1917, 1527},
            {1190000000, 1039, 625},
            {1200000000, 973,  94},
            {1210000000, 1748, 659},
            {1220000000, 1678, 1627},
            {1230000000, 1619, 33},
            {1240000000, 1482, 175},
            {1250000000, 893,  1533},
            {1260000000, 1816, 216},
            {1270000000, 1917, 1527},
            {1280000000, 1039, 625},
            {1290000000, 973,  94},
            {1300000000, 1748, 659},
            {1310000000, 1678, 1627},
            {1320000000, 1619, 33},
            {1330000000, 1482, 175},
            {1340000000, 893,  1533},
            {1350000000, 1816, 216},
            {1360000000, 1917, 1527},
            {1370000000, 1039, 625},
            {1380000000, 973,  94},
            {1390000000, 1748, 659},
            {1400000000, 1678, 1627},
            {1410000000, 1619, 33},
            {1420000000, 1482, 175},
            {1430000000, 893,  1533},
            {1440000000, 1816, 216},
            {1450000000, 1917, 1527},
            {1460000000, 1039, 625},
            {1470000000, 973,  94},
            {1480000000, 1748, 659},
            {1490000000, 1678, 1627},
            {1500000000, 1619, 33},
            {1510000000, 1482, 175},
            {1520000000, 893,  1533},
            {1530000000, 1816, 216},
            {1540000000, 1917, 1527},
            {1550000000, 1039, 625},
            {1560000000, 973,  94},
            {1570000000, 1748, 659},
            {1580000000, 1678, 1627},
            {1590000000, 1619, 33},
            {1600000000, 1482, 175},
            {1610000000, 893,  1533},
            {1620000000, 1816, 216},
            {1630000000, 1917, 1527},
            {1640000000, 1039, 625},
            {1650000000, 973,  94},
            {1660000000, 1748, 659},
            {1670000000, 1678, 1627},
            {1680000000, 1619, 33},
            {1690000000, 1482, 175},
            {1700000000, 893,  1533},
            {1710000000, 1816, 216},
            {1720000000, 1917, 1527},
            {1730000000, 1039, 625},
            {1740000000, 973,  94},
            {1750000000, 1748, 659},
            {1760000000, 1678, 1627},
            {1770000000, 1619, 33},
            {1780000000, 1482, 175},
            {1790000000, 893,  1533},
            {1800000000, 1816, 216},
            {1810000000, 1917, 1527},
            {1820000000, 1039, 625},
            {1830000000, 973,  94},
            {1840000000, 1748, 659},
            {1850000000, 1678, 1627},
            {1860000000, 1619, 33},
            {1870000000, 1482, 175},
            {1880000000, 893,  1533},
            {1890000000, 1816, 216},
            {1900000000, 1917, 1527},
            {1910000000, 1039, 625},
            {1920000000, 973,  94},
            {1930000000, 1748, 659},
            {1940000000, 1678, 1627},
            {1950000000, 1619, 33},
            {1960000000, 1482, 175},
            {1970000000, 893,  1533},
            {1980000000, 1816, 216},
            {1990000000, 1917, 1527},
            {2000000000, 1039, 625},
            {2010000000, 973,  94},
            {2020000000, 1748, 659},
            {2030000000, 1678, 1627},
            {2040000000, 1619, 33},
            {2050000000, 1482, 175},
            {2060000000, 893,  1533},
            {2070000000, 1816, 216},
            {2080000000, 1917, 1527},
            {2090000000, 1039, 625},
            {2100000000, 973,  94},
            {2110000000, 1748, 659},
            {2120000000, 1678, 1627},
            {2130000000, 1619, 33},
            {2140000000, 1482, 175},
    };
    reverse(v.begin(), v.end());
    for (vector<ll> &u : v) {
        if (u[0] <= n) {
            return u;
        }
    }
}


vector<ll> get_start_109(ll n) {
    vector<vector<ll>> v = {
            {0,          0,         1},
            {10000000,   273024722, 841383495,},
            {20000000,   735416536, 604421324,},
            {30000000,   891606433, 926474276,},
            {40000000,   366590796, 82359371,},
            {50000000,   764933660, 965046375,},
            {60000000,   549426113, 778490445,},
            {70000000,   314009180, 830613328,},
            {80000000,   795457211, 896345010,},
            {90000000,   664674740, 606190561,},
            {100000000,  205006548, 780731618,},
            {110000000,  492455245, 470968736,},
            {120000000,  589446215, 877859021,},
            {130000000,  260155974, 976398876,},
            {140000000,  262576361, 826567551,},
            {150000000,  125358142, 635579796,},
            {160000000,  891024209, 766702023,},
            {170000000,  773775745, 130924794,},
            {180000000,  376189776, 935867514,},
            {190000000,  255070881, 204342607,},
            {200000000,  949189369, 496051784,},
            {210000000,  657372730, 758316849,},
            {220000000,  670515219, 848984194,},
            {230000000,  401649562, 663329579,},
            {240000000,  661531915, 875591217,},
            {250000000,  90375641,  888266429,},
            {260000000,  897450946, 620195505,},
            {270000000,  337991205, 473312970,},
            {280000000,  771181580, 338392514,},
            {290000000,  552926357, 442625091,},
            {300000000,  510800382, 6448490,},
            {310000000,  483160125, 181711819,},
            {320000000,  669462600, 756131921,},
            {330000000,  996038106, 992569597,},
            {340000000,  312589585, 460691821,},
            {350000000,  153418630, 902617200,},
            {360000000,  303034641, 940158844,},
            {370000000,  895650396, 791251089,},
            {380000000,  41472724,  959040318,},
            {390000000,  19535491,  469937814,},
            {400000000,  339544590, 682289817,},
            {410000000,  649148609, 566672494,},
            {420000000,  282422232, 545801076,},
            {430000000,  53794652,  303296206,},
            {440000000,  709791254, 453772820,},
            {450000000,  428232473, 661832010,},
            {460000000,  459959148, 256829024,},
            {470000000,  942462633, 813934665,},
            {480000000,  111536249, 708923770,},
            {490000000,  457645178, 875659682,},
            {500000000,  14509583,  263760416,},
            {510000000,  133222827, 267876391,},
            {520000000,  524407422, 696012459,},
            {530000000,  323156669, 275201434,},
            {540000000,  930074032, 554855022,},
            {550000000,  638030030, 555709791,},
            {560000000,  886919437, 790269523,},
            {570000000,  495859025, 992017109,},
            {580000000,  600090510, 39404886,},
            {590000000,  716584935, 420521936,},
            {600000000,  83851447,  518512211,},
            {610000000,  420262401, 105864612,},
            {620000000,  524509610, 147857686,},
            {630000000,  825210680, 621659933,},
            {640000000,  132530702, 306896196,},
            {650000000,  279355401, 778212803,},
            {660000000,  701684898, 847435974,},
            {670000000,  622753469, 56080961,},
            {680000000,  399039222, 739051171,},
            {690000000,  984276245, 351569052,},
            {700000000,  508850300, 284411968,},
            {710000000,  426459928, 722245555,},
            {720000000,  785882395, 774280241,},
            {730000000,  96377252,  977562763,},
            {740000000,  576589222, 936751154,},
            {750000000,  948271120, 609743475,},
            {760000000,  618012199, 304437647,},
            {770000000,  693141818, 464808358,},
            {780000000,  430539113, 474468995,},
            {790000000,  884994852, 923077236,},
            {800000000,  943765097, 907775646,},
            {810000000,  641666767, 182842221,},
            {820000000,  379041527, 28272840,},
            {830000000,  468246645, 688411956,},
            {840000000,  631621822, 238573715,},
            {850000000,  27206396,  684458546,},
            {860000000,  54806317,  528234749,},
            {870000000,  111454271, 212130544,},
            {880000000,  961463719, 823419583,},
            {890000000,  474373568, 190927329,},
            {900000000,  778112451, 254813101,},
            {910000000,  82742054,  919094990,},
            {920000000,  75604496,  484423942,},
            {930000000,  379526781, 53013037,},
            {940000000,  241911808, 392959438,},
            {950000000,  756885047, 901373621,},
            {960000000,  302713626, 926779350,},
            {970000000,  698737055, 756394190,},
            {980000000,  445689933, 919736016,},
            {990000000,  72348114,  371855396,},
            {1000000000, 70760738,  691147621,},
            {1010000000, 57355207,  432811268,},
            {1020000000, 18257109,  23546351,},
            {1030000000, 548430669, 884420669,},
            {1040000000, 424550866, 127365,},
            {1050000000, 983685271, 697249794,},
            {1060000000, 46872294,  754256769,},
            {1070000000, 879372171, 975424304,},
            {1080000000, 296145824, 849518504,},
            {1090000000, 330282194, 82480701,},
            {1100000000, 184548203, 610281945,},
            {1110000000, 468581984, 845333145,},
            {1120000000, 371464501, 81446590,},
            {1130000000, 597836708, 828499380,},
            {1140000000, 913796906, 58893852,},
            {1150000000, 875914123, 401815083,},
            {1160000000, 578602783, 857234824,},
            {1170000000, 358088632, 487898712,},
            {1180000000, 55988012,  118431282,},
            {1190000000, 385283281, 959293520,},
            {1200000000, 982390458, 551910329,},
            {1210000000, 195327011, 33441978,},
            {1220000000, 67522709,  936696149,},
            {1230000000, 701711556, 797927967,},
            {1240000000, 528351171, 841794296,},
            {1250000000, 507993864, 159482030,},
            {1260000000, 316592194, 495511345,},
            {1270000000, 270343777, 788462839,},
            {1280000000, 112088445, 129283730,},
            {1290000000, 845446998, 592906925,},
            {1300000000, 587649587, 319375725,},
            {1310000000, 986576079, 364513150,},
            {1320000000, 824121179, 894019318,},
            {1330000000, 835345312, 123943967,},
            {1340000000, 997547467, 952188977,},
            {1350000000, 664053004, 362512684,},
            {1360000000, 593696954, 995675520,},
            {1370000000, 445635449, 769854906,},
            {1380000000, 3625896,   195606357,},
            {1390000000, 118654550, 570145375,},
            {1400000000, 19820395,  433301436,},
            {1410000000, 528695115, 83525006,},
            {1420000000, 633414674, 590390956,},
            {1430000000, 836507980, 731161665,},
            {1440000000, 825750934, 162798457,},
            {1450000000, 500305865, 369952052,},
            {1460000000, 10567243,  291876611,},
            {1470000000, 334935873, 471672929,},
            {1480000000, 604576933, 521304035,},
            {1490000000, 173398240, 906563516,},
            {1500000000, 267534008, 520907654,},
            {1510000000, 254134190, 162966787,},
            {1520000000, 214786327, 157679300,},
            {1530000000, 8635641,   704718542,},
            {1540000000, 293477646, 298035142,},
            {1550000000, 858419567, 393329447,},
            {1560000000, 741292955, 391797442,},
            {1570000000, 76876221,  587048760,},
            {1580000000, 534280789, 478637089,},
            {1590000000, 114929254, 44519941,},
            {1600000000, 517514949, 255491426,},
            {1610000000, 9443661,   458238237,},
            {1620000000, 169509799, 80175788,},
            {1630000000, 824512752, 101241724,},
            {1640000000, 381505794, 990307196,},
            {1650000000, 350313047, 763528078,},
            {1660000000, 386339346, 601265639,},
            {1670000000, 286958614, 417692925,},
            {1680000000, 199888398, 528132270,},
            {1690000000, 75836970,  937904857,},
            {1700000000, 487618651, 42401514,},
            {1710000000, 768067181, 804373697,},
            {1720000000, 648310521, 667515628,},
            {1730000000, 388337239, 886802060,},
            {1740000000, 52380451,  937660004,},
            {1750000000, 953989415, 940583703,},
            {1760000000, 491772253, 504403637,},
            {1770000000, 35755843,  474455923,},
            {1780000000, 128339863, 209760239,},
            {1790000000, 391495182, 175460759,},
            {1800000000, 317466925, 5111483,},
            {1810000000, 265055946, 936102492,},
            {1820000000, 918574015, 533747685,},
            {1830000000, 41300027,  939908160,},
            {1840000000, 835817239, 588182574,},
            {1850000000, 301281092, 774859070,},
            {1860000000, 729671190, 250520924,},
            {1870000000, 22583984,  946479571,},
            {1880000000, 862812908, 241305950,},
            {1890000000, 327873216, 611278215,},
            {1900000000, 803949450, 651330353,},
            {1910000000, 443463861, 135727475,},
            {1920000000, 854603791, 693229317,},
            {1930000000, 745050546, 337148332,},
            {1940000000, 148035219, 701213735,},
            {1950000000, 34102463,  394926149,},
            {1960000000, 940260767, 503268479,},
            {1970000000, 903964193, 614213025,},
            {1980000000, 961302287, 689584939,},
            {1990000000, 342954178, 162664780,},
            {2000000000, 413641097, 911543211,},
            {2010000000, 435615125, 498576277,},
            {2020000000, 392373781, 605639857,},
            {2030000000, 491102416, 913607071,},
            {2040000000, 830787773, 123271068,},
            {2050000000, 658195516, 908174854,},
            {2060000000, 353372684, 84987321,},
            {2070000000, 579158351, 305994976,},
            {2080000000, 525475986, 941687432,},
            {2090000000, 447960680, 124125236,},
            {2100000000, 258696416, 346378880,},
            {2110000000, 741514544, 985096248,},
            {2120000000, 958624056, 732725931,},
            {2130000000, 744199081, 833037724,},
            {2140000000, 924650633, 186269113,},
    };
    reverse(v.begin(), v.end());
    for (vector<ll> &u : v) {
        if (u[0] <= n) {
            return u;
        }
    }
}

void make() {
    ll n = 1ll << 31;

    mint p1 = 0;
    mint p2 = 1;

    for (ll i = 1; i < n; i++) {
        mint now = p2.pow(2) + p1.pow(2);
        p2 = p1;
        p1 = now;

        if (i % 10000000 == 0) {
            cout << i << ' ' << p1 << ' ' << p2 << endl;
        }

    }

}

void solve() {

    int n, m;
    cin >> n >> m;
    mod = m;

    if (n == 1) {
        cout << 0 << endl;
        return;
    }

    auto v = m == 1999 ? get_start_1999(n) : get_start_109(n);

    mint p1 = v[1];
    mint p2 = v[2];

    for (ll i = v[0] + 1; i < n; i++) {
        mint now = p2.pow(2) + p1.pow(2);
        p2 = p1;
        p1 = now;

    }

    cout << p1 << endl;
}


int main() {
    solve();
}