#include <bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp>
//namespace mp = boost::multiprecision;
//#include "atcoder/all"

using namespace std;

const double PI = 3.14159265358979323846;
typedef long long ll;
const double EPS = 1e-9;
#define rep(i, n) for (int i = 0; i < (n); ++i)
typedef pair<ll, ll> P;
const ll INF = 10e17;
#define cmin(x, y) x = min(x, y)
#define cmax(x, y) x = max(x, y)
#define ret() return 0;

double equal(double a, double b) {
    return fabs(a - b) < DBL_EPSILON;
}

template<class T>
std::istream &operator>>(std::istream &in, set<T> &o) {
    T a;
    in >> a;
    o.insert(a);
    return in;
}

template<class T>
std::istream &operator>>(std::istream &in, queue<T> &o) {
    ll a;
    in >> a;
    o.push(a);
    return in;
}

template<class T>
bool contain(set<T> &s, T a) { return s.find(a) != s.end(); }

typedef priority_queue<ll, vector<ll>, greater<ll> > PQ_ASK;

int main() {


    vector<vector<double>> dots = {
            {-0.394334703243023243466907645141, -0.394334703243023243466907645140},
            {-0.183004109729069730400722935421, -0.394334703243023243466907645141},
            {0.028326483784883782665461774298,  -0.394334703243023243466907645140},
            {0.394334703243023243466907645140,  -0.394334703243023243466907645140},
            {0.211330593513953513066184709719,  -0.288645935735636460182382751618},
            {-0.394334703243023243466907645140, -0.183004109729069730400722935421},
            {-0.183004109729069730400722935421, -0.183004109729069730400722935421},
            {0.028326478573481601599851292247,  -0.182957177251990736350515216217},
            {0.394334703243023243466907645140,  -0.182957168228249676897857858096},
            {0.211330588302551332000574227669,  -0.077268409744603953065990322695},
            {-0.182957177251990736350515216219, 0.028326478573481601599851292246},
            {-0.394334703243023243466907645140, 0.028326483784883782665461774298},
            {0.394334703243023243466907645140,  0.028420348739041770765877212706},
            {0.028373343815464838135808465234,  0.028501465194588016246522172924},
            {0.181393963492214359619215354299,  0.181393963497465264416865383576},
            {-0.288645935735636460182382751618, 0.211330593513953513066184709720},
            {-0.072025957757277944802379302708, 0.214460062733570599308961235715},
            {0.394334703243023243466907645140,  0.239750942252995283832061922425},
            {-0.394334703243023243466907645140, 0.394334703243023243466907645140},
            {-0.182957168228249676897857858095, 0.394334703243023243466907645140},
            {0.038905252713693787293099252679,  0.394334703243023243466907645140},
            {0.250235846227647300359283962398,  0.394334703243023243466907645140},
    };

    ll dig = 1e8;

    for (auto e : dots) {
        cout << ll((e[0] + 0.5) * dig) << ' ' << ll((e[1] + 0.5) * dig) << endl;
//        cout << e[0] + 0.5 << ' ' << e[1] + 0.5 << endl;
//        cout << e[0] << ' ' << e[1] << endl;
    }

}
